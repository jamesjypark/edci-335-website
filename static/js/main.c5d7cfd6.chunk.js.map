{"version":3,"sources":["assets/intro.svg","assets/part1.svg","assets/part2.svg","assets/part3.svg","assets/outro.svg","assets/logo.png","assets/intro-1.png","assets/intro-2.jpg","assets/intro-3.jpg","assets/intro-4.jpg","assets/part1-1.png","assets/part2-1.png","assets/part3-1.png","assets/part3-2.png","assets/outro-1.png","Components/Home/Home.js","Components/ProjectCard/ProjectCard.js","Components/Interactive/blockMap.js","Components/Interactive/Interactive.js","Components/ProjectPage/ProjectPage.js","Components/Projects/Intro.js","Components/Projects/Part1.js","Components/Projects/Part2.js","Components/Projects/Part3.js","Components/Projects/Outro.js","Components/Code/Code.js","Components/Main/Main.js","Components/Header/Header.js","Components/Footer/Footer.js","App.js","serviceWorker.js","Components/ScrollToTop.js","Components/RouteContainer.js","index.js","assets/background.png","assets/portrait.png","assets/blocker.png"],"names":["module","exports","__webpack_require__","p","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createParallax","image","portraitRef","current","simpleParallax","overflow","orientation","React","createRef","react_default","a","createElement","className","src","Blocker","ref","Portrait","onLoad","Background","href","target","react_router_dom","to","activeClassName","Component","ProjectCard","_this$props","title","duration","technology","summary","map","text","getVariableNameInput","vars","setVars","varName","value","onChange","e","match","blockMap","id","render","Fragment","python","concat","c","mips","initialVars","v1","v2","type","getNumberInput","_ref","b","_ref2","_ref3","_ref4","x","_ref5","_ref6","Interactive","_useState","useState","_useState2","slicedToArray","blocks","setBlocks","allVars","uniq","reduce","acc","toConsumableArray","values","variableNames","filter","isNaN","console","log","blocksLines","onClick","clone","i","find","bM","varValue","index","varVal","blocksClone","set","setBlockVariable","languages","includes","react_code_blocks_esm","lines","variables","v","padEnd","join","getMips","flatten","language","showLineNumbers","startingLineNumber","theme","dracula","wrapLines","getC","ProjectPage","renderPage","page","item","list","address","caption","url","frameBorder","allow","allowFullScreen","exact","link","code","codeBlock","Interactive_Interactive","Intro","require","Part1","Part2","Part3","Outro","CodeList","Components_ProjectCard_ProjectCard","assign","IntroLogo","Part1Logo","Part2Logo","Part3Logo","OutroLogo","Code","react_router","path","component","Components_ProjectPage_ProjectPage","Main","state","Header","logo","Footer","App","Components_Header_Header","Components_Main_Main","Components_Footer_Footer","Boolean","window","location","hostname","ScrollToTop","prevProps","pathname","scrollTo","children","withRouter","ReactGA","initialize","history","createHistory","listen","pageview","RouteContainer","ReactDOM","basename","process","Components_RouteContainer","Components_ScrollToTop","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c5d7cfd6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/intro.6a3daa0d.svg\";","module.exports = __webpack_public_path__ + \"static/media/part1.8abf3749.svg\";","module.exports = __webpack_public_path__ + \"static/media/part2.30a4dcd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/part3.e18069d2.svg\";","module.exports = __webpack_public_path__ + \"static/media/outro.f493e4b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.01e0c90c.png\";","module.exports = __webpack_public_path__ + \"static/media/intro-1.790d52e5.png\";","module.exports = __webpack_public_path__ + \"static/media/intro-2.fde478a7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/intro-3.3a84ea5d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/intro-4.9e459c12.jpg\";","module.exports = __webpack_public_path__ + \"static/media/part1-1.20bddd61.png\";","module.exports = __webpack_public_path__ + \"static/media/part2-1.9518afc9.png\";","module.exports = __webpack_public_path__ + \"static/media/part3-1.651b6253.png\";","module.exports = __webpack_public_path__ + \"static/media/part3-2.776e76f9.png\";","module.exports = __webpack_public_path__ + \"static/media/outro-1.bb5cda71.png\";","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./Home.scss\";\n\nimport Background from \"../../assets/background.png\";\nimport Portrait from \"../../assets/portrait.png\";\nimport Blocker from \"../../assets/blocker.png\";\nimport simpleParallax from \"simple-parallax-js\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.portraitRef = React.createRef();\n  }\n  createParallax = () => {\n    let image = this.portraitRef.current;\n    new simpleParallax(image, {\n      overflow: true,\n      orientation: \"right\"\n    });\n  };\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"title left\">motivation</div>\n        <div className=\"Portrait\">\n          <img src={Blocker} />\n          <img\n            className=\"main\"\n            ref={this.portraitRef}\n            src={Portrait}\n            onLoad={this.createParallax}\n          />\n          <img src={Background} />\n        </div>\n        <div className=\"subheader1\">Why are there different programming languages?</div>\n        <div className=\"description basetext1 medium\">\n          <div>And more importantly, which one should you learn?</div>\n          <div>These are some of the first questions anyone who wants to learn programming ask - but the answer isn't always obvious.</div>\n          <br />\n          <div>The reason why it's not easy to answer this question is because it <i>depends</i> on the situation. What are you trying to build? How many users will be using it? Which platform do you want your program to run? These all factor into answering the question. </div>\n          <br />\n          <div>We are <a href=\"https://www.linkedin.com/in/josef-waller-ab4870196/\" className=\"link\" target=\"_blank\">Josef</a> and <a href=\"https://www.linkedin.com/in/jamesjypark/\" className=\"link\" target=\"_blank\">James</a>, 4th year Computer Science students at the University of Victoria. We will do our best to explain how different programming languages differ and which one is right for you.</div>\n          <br />\n          <div>Let's get {\" \"}\n            <NavLink to=\"/edci-335-website/code\" className=\"link\" activeClassName=\"active\">\n               started\n            </NavLink>\n            !\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\n\nimport \"./ProjectCard.scss\";\n\nclass ProjectCard extends React.Component {\n  render() {\n    const { title, duration, technology, summary, image } = this.props;\n    return (\n      <div className=\"ProjectCard\">\n        <div className=\"image-container\">\n          <img src={image} />\n        </div>\n        <div className=\"text\">\n          <div className=\"subheader2 left\">{title}</div>\n          <div className=\"basetext3 book left\">{duration}</div>\n          <div className=\"basetext3 book left\">{technology}</div>\n          <div className=\"summary hide-in-mobile\">\n            {summary.map(text => (\n              <div className=\"basetext3 book left\">{text}</div>\n            ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProjectCard;\n","import React from 'react'\n\nconst getVariableNameInput = (vars, setVars, varName) => {\n  return <input value={vars[varName]} onChange={e => {\n    if (!e.target.value.match('^[A-Za-z_]*$')) {\n      return false;\n    } else {\n      setVars(varName, e.target.value)\n    }\n  }} />\n}\n\nconst getNumberInput = (vars, setVars, varName) => <input value={vars[varName]} onChange={e => setVars(varName, e.target.value)} type=\"number\"/>\n\nexport default [\n  {\n    id: 1,\n    text: 'Add one variable to another',\n    render: (vars, setVars) => <>\n      Add {getVariableNameInput(vars, setVars, 'v2')} to {getVariableNameInput(vars, setVars, 'v1')}\n    </>,\n    python: vars => [`${vars['v1']} += ${vars['v2']}`],\n    c: vars => [`${vars['v1']} = ${vars['v1']} + ${vars['v2']};`],\n    mips: vars => [\n    `LA $t0, ${vars['v2']}`,\n    `LW $t1, ($t0)`,\n    `LA $t0, ${vars['v1']}`,\n    `LW $t2, ($t0)`,\n    `ADD $t1, $t1, $t2`,\n    `SW $t1, ($t0)`,\n    ],\n    initialVars: {\n      v1: 'x',\n      v2: 'y'\n    }\n  },\n  {\n    id: 2,\n    text: 'Add a constant to a variable',\n    render: (vars, setVars) => <>\n      Add {getNumberInput(vars, setVars, 'v2')} to {getVariableNameInput(vars, setVars, 'v1')}\n    </>,\n    python: vars => [`${vars['v1']} += ${vars['v2']}`],\n    c: vars => [`${vars['v1']} = ${vars['v1']} + ${vars['v2']};`],\n    mips: vars => [\n    `LA $t0, ${vars['v1']}`,\n    `LW $t1, ($t0)`,\n    `LI $t2, ${vars['v2']}`,\n    `ADD $t1, $t1, $t2`,\n    `SW $t1, ($t0)`,\n    ],\n    initialVars: {\n      v1: 'x',\n      v2: 0\n    }\n  },\n  {\n    id: 3,\n    text: 'Multiply one variable by another',\n    render: (vars, setVars) => <>\n      Multiply {getVariableNameInput(vars, setVars, 'a')} by {getVariableNameInput(vars, setVars, 'b')}\n    </>,\n    python: ({a, b}) => [`${a} *= ${b}`],\n    c: ({a, b}) => [`${a} = ${a} * ${b}`],\n    mips: ({a, b}) => [\n    `LA $t0, ${a}`,\n    'LW $t1, ($t0)',\n    `LA $t0, ${b}`,\n    'LW $t2, ($t0)',\n    'mult $t1, $t1',\n    'mflo $t1',\n    `LA $t0, ${a}`,\n    `SW $t1, $(t0)`\n    ],\n    initialVars: {\n      a: 'x',\n      b: 'y'\n    }\n  },\n  {\n    id: 4,\n    text: 'Print a variable to the console',\n    render: (vars, setVars) => <>\n      Print {getVariableNameInput(vars, setVars, 'x')}\n    </>,\n    python: ({ x }) => [`print(${x})`],\n    c: ({ x }) => [`std::cout << ${x} << std::endl`],\n    mips: ({ x }) => [\n      `LA $t0, ${x}`,\n      'LW $a0, ($t0)',\n      `LI $v0, 1`,\n      `syscall`\n    ],\n    initialVars: {\n      x: 'x'\n    }\n  }\n\n      \n]\n\n","import React, { useState } from 'react'\nimport set from 'lodash/set'\nimport clone from 'lodash/clone'\nimport uniq from 'lodash/uniq'\nimport flatten from 'lodash/flatten'\nimport padEnd from 'lodash/padEnd'\nimport blockMap from './blockMap'\nimport { CopyBlock, dracula } from \"react-code-blocks\";\n\nimport './Interactive.scss'\n\nexport default function Interactive(props) {\n  const [blocks, setBlocks] = useState([])\n  const setBlockVariable = (index, varName, varVal) => {\n    let blocksClone = clone(blocks)\n    set(blocksClone, `[${index}].variableNames[${varName}]`, varVal)\n    console.log(blocksClone)\n    setBlocks(blocksClone)\n  }\n  const allVars = uniq(blocks.reduce((acc, b) => [...acc, ...Object.values(b.variableNames)], []).filter(isNaN))\n  console.log(allVars)\n  const getC = blocksLines => {\n    const prefix = [\n    '#include <iostream>',\n    '',\n    'int main() {'\n    ]\n    const variables = allVars.map(v => `  int ${v} = 0;`)\n    const lines = blocksLines.map(b => `  ${b}`)\n    const suffix = ['}']\n    return [...prefix, ...variables, ...lines, ...suffix].join('\\n')\n  }\n  const getPython = blocksLines => blocksLines.join('\\n')\n  const getMips = blocksLines => {\n    const prefix = [\n    '  main:'\n    ]\n    const lines = blocksLines.map(b => `      ${b}`)\n    const variables = [\n      '    .data',\n      ...allVars.map(v => `      ${padEnd(`${v}:`, 8)}.word`)\n    ]\n    return [...prefix, ...lines, ...variables].join('\\n')\n  }\n  return (\n  <>\n    <div className>\n      {\n        blockMap.map(b => <button \n          className=\"button bold\"\n          onClick={\n          () => setBlocks([...blocks, {\n            id: b.id,\n            variableNames: clone(b.initialVars)\n          }])\n        }>{b.text}</button>)\n      }\n    </div>\n    <div className=\"input-container\">\n      {blocks.map((b, i) => <div>{blockMap.find(bM => bM.id == b.id).render(\n      b.variableNames,\n      (varName, varValue) => console.log(i) || setBlockVariable(i, varName, varValue))}</div>)}\n    </div>\n    <div className=\"code-container\">\n      <div className={`code ${props.languages.includes(\"mips\") ? \"\" : \"hide\"}`}>\n        <div className=\"basetext1 bold center\"> MIPS </div>\n        <CopyBlock\n          text={getMips(flatten(blocks.map(b => blockMap.find(bM => bM.id == b.id).mips(b.variableNames))))}\n          language={\"c\"}\n          showLineNumbers={true}\n          startingLineNumber={1}\n          theme={dracula}\n          wrapLines\n        />\n      </div>\n      <div className={`code ${props.languages.includes(\"c\") ? \"\" : \"hide\"}`}>\n        <div className=\"basetext1 bold center\"> C </div>\n        <CopyBlock\n          text={getC(flatten(blocks.map(b => blockMap.find(bM => bM.id == b.id).c(b.variableNames))))}\n          language={\"c\"}\n          showLineNumbers={true}\n          startingLineNumber={1}\n          theme={dracula}\n          wrapLines\n        />\n      </div>\n      <div className={`code ${props.languages.includes(\"python\") ? \"\" : \"hide\"}`}>\n        <div className=\"basetext1 bold center\"> Python </div>\n        <CopyBlock\n          text={getPython(flatten(blocks.map(b => blockMap.find(bM => bM.id == b.id).python(b.variableNames))))}\n          language={\"python\"}\n          showLineNumbers={true}\n          startingLineNumber={1}\n          theme={dracula}\n          wrapLines\n        />\n      </div>\n    </div>\n  </>\n  )\n}\n","import React from \"react\";\nimport Interactive from \"../Interactive/Interactive\"\nimport { NavLink } from \"react-router-dom\";\nimport { CopyBlock, dracula } from \"react-code-blocks\";\n\nimport \"./ProjectPage.scss\";\n\nclass ProjectPage extends React.Component {\n  renderPage = page => {\n    return page.map(item => {\n      switch (item.type) {\n        case \"title\":\n          return (\n            <div className=\"title-container\">\n              <div className=\"subheader1 fade-in\">{item.text}</div>\n            </div>\n          );\n        case \"duration\":\n          return (\n            <div className=\"margin-container\">\n              <div className=\"basetext2 bold\">{item.text}</div>\n            </div>\n          );\n        case \"technology\":\n          return (\n            <div className=\"margin-container\">\n              <div className=\"basetext2 medium technology\">{item.text}</div>\n            </div>\n          );\n        case \"list\":\n          return (\n            <div className=\"paragraph-container left\">\n              {item.list.map(item => (\n                <div className=\"basetext2 medium\">{item}</div>\n              ))}\n            </div>\n          );\n        case \"subheader\":\n          return (\n            <div className=\"margin-container left\">\n              <div className=\"subheader2\">{item.text}</div>\n            </div>\n          );\n        case \"subheader2\":\n          return (\n            <div className=\"margin-container left\">\n              <div className=\"subheader2\">{item.text}</div>\n            </div>\n          );\n        case \"paragraph\":\n          return (\n            <div className=\"paragraph-container\">\n              <div className=\"basetext2 medium\">{item.text}</div>\n            </div>\n          );\n        case \"paragraph-link\":\n          return <div className=\"paragraph-container\">{item.text}</div>;\n        case \"image\":\n          return <img src={item.address} />;\n        case \"image-caption\":\n          return (\n          <div>\n            <img src={item.address} />\n            <div>{item.caption}</div>\n          </div>\n        );\n        case \"video\":\n          return (\n            <iframe\n              className=\"video\"\n              src={item.url}\n              frameBorder=\"0\"\n              allow=\"autoplay; encrypted-media\"\n              allowFullScreen\n              title=\"video\"\n            />\n          );\n        case \"next-button\":\n          return (\n            <div className=\"subheader2\">\n              <NavLink exact to={item.link} className=\"link\" activeClassName=\"active\">\n                Next Lesson: {item.title}\n              </NavLink>\n            </div>\n          )\n        case \"code\":\n          return (\n            <div className=\"code-block\">\n            <CopyBlock\n              language=\"c\"\n              text={item.code}\n              codeBlock\n              theme={dracula}\n              showLineNumbers={true}\n            />\n            </div>\n          )\n        case \"interactive\":\n          return <Interactive \n            languages = {item.languages}\n          />\n        case \"break\":\n          return <div></div>\n      }\n    });\n  };\n  render() {\n    const { page } = this.props;\n    return <div className=\"ProjectPage\">{this.renderPage(page)}</div>;\n  }\n}\n\nexport default ProjectPage;\n","import React from \"react\";\n\nexport default {\n  title: \"Intro\",\n  duration: \"5 Minutes\",\n  technology: \"No requirements\",\n  summary: [\n    \"Introduction to different programming languages\",\n    \"Why we need different programming languages\",\n  ],\n  page: [\n    {\n      type: \"title\",\n      text: \"Introduction - Why We Need Different Programming Languages\"\n    },\n    {\n      type: \"duration\",\n      text: \"5 Minute Read\"\n    },\n    {\n      type: \"technology\",\n      text: \"Introduction to programming languages using an analogy of housing\"\n    },\n    {\n      type: \"image\",\n      address: require(\"../../assets/intro-1.png\"),\n    },\n    {\n      type: \"paragraph\",\n      text:\n        \"Suppose that you have just taken a job in a new city and you need to find a place to live. Your work has offered to help you find a place to live, by hiring three contracting companies to make a plan to find you a house. Each contractor writes up a plan and presents you with their idea on how to best provide housing. Assess each company's plan.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"Company One's Plan\"\n    },\n    {\n      type: \"paragraph\",\n      text:\n        \"Company One has the simplest plan - they will just buy a home assembly kit and an empty plot of land. Then the company will simply assemble the house on the plot of land (hooking it up to the plumbing and electricity) after which you can move in. \"\n    },\n    {\n      type: \"image-caption\",\n      address: require(\"../../assets/intro-2.jpg\"),\n      caption: \"Building a house using home assembly kit is fast and cheap, but is it what everyone wants?\"\n    },\n    {\n      type: \"paragraph\",\n      text:\n        \"This is the fastest plan, as the company will only need a couple of days to fully assemble the house, as well as the cheapest. However, it provides the least amount of customization, as your only choices are choosing the location and assembly kit from a list the company has provided you.\"\n    },\n\n    {\n      type: \"subheader2\",\n      text: \"Company Two's Plan\"\n    },\n    {\n      type: \"paragraph\",\n      text:\n        \"Company Two’s plan leans more towards customization. They will also buy a plot of land, write up blueprints for a house and build it from scratch, using planks of wood bought in bulk. This will allow you to be a part of the design process and have creative input into the design of the house. \"\n    },\n    {\n      type: \"image-caption\",\n      address: require(\"../../assets/intro-3.jpg\"),\n      caption: \"Building a house from scratch allows for a customized housing. But it is certainly not for everyone.\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"However, this plan will also take much longer than the first one, as company two will have to complete the designing and planning before purchasing any materials or beginning the construction. Their plan will also be more expensive not only due to the increased number of manhours but also because buying the materials separately will cost more.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"Company Three's Plan\"\n    },\n    {\n      type: \"paragraph\",\n      text:\n        \"Finally, Company Three’s plan is the most ambitious. They propose buying raw materials (logs and iron and stone) and fashioning the building materials themselves. \"\n    },\n    {\n      type: \"image-caption\",\n      address: require(\"../../assets/intro-4.jpg\"),\n      caption: \"Starting with raw materials mean you can customize every inch of the house.\"\n    },\n    {\n      type: \"paragraph\",\n      text:\n        \"This will allow for an insane level of customization as well as the contracting company’s guarantee about the quality down to a single plank of wood. However, it is also the most expensive plan by far, as well as the slowest. Company three will have to complete an even more intense planning phase, and then begin preparing the material before construction can begin. \"\n    },\n    {\n      type: \"subheader2\",\n      text:\n        \"So which company do you choose?\"\n    },\n\n    {\n      type: \"paragraph\",\n      text:\n        \"The answer usually lies in the details. What is your budget for this house? How long are you willing to wait before moving in? How much customization do you need? What are your exact needs for your house, and what options does each plan provide to meet them? A regular employee would most likely choose option one, as being able to move in ASAP would be a big plus. However, if the employee was an eccentric millionaire living in a very nice hotel, they might be more inclined to choose option 3 since time or money are not a major concern for them.\"\n    },\n    {\n      type: \"paragraph\",\n      text:\n        \"Software developers have to make decisions like this all the time. Whenever starting a new project or extending an existing one, a programmer has to choose which language, libraries, environments, and platforms the project will use, taking into consideration the time constraints, budget, amount of work, and finished product. Thus, these decisions can often make or break a project. In this blog, we’re going to look at three different programming languages, their strengths and weaknesses, which projects they excel at and when they are often used in modern day.\"\n    },\n    {\n      type: \"next-button\",\n      title: \"Part 1 - Assembly\",\n      link: \"/edci-335-website/code/part1\"\n    }\n  ]\n};\n","export default {\n  title: \"Part 1 - Assembly (MIPS)\",\n  duration: \"10 Minutes\",\n  technology: \"Complete Introduction\",\n  summary: [\n    \"The building blocks of programming languages\",\n    \"Why is assembly still relevant to us?\",\n  ],\n  page: [\n    {\n      type: \"title\",\n      text: \"Part 1 - Assembly (MIPS)\"\n    },\n    {\n      type: \"duration\",\n      text: \"10 Minutes\"\n    },\n    {\n      type: \"technology\",\n      text: \"Why is Assembly still relevant to us?\"\n    },\n    {\n      type: \"image-caption\",\n      address: require(\"../../assets/part1-1.png\"),\n      caption: \"Assembly is the closest programming language to machine code\"\n    },\n    {\n      type: \"paragraph\",\n      text:\n        \"The most primitive programming language is called Assembly. Assembly is a long list of instructions that is assembled (hence the name) into machine code. Each assembly instruction is 1-1 with instruction in machine code, so assembly is basically what is happening in the computer when it runs the code. Most of the instructions use registers, which are just places to store a number on a CPU. Let’s look at some assembly code:\"\n    },\n    {\n      type: \"code\",\n      code: `li $1, 10\\naddi $2, $1, 5\\nsub $3, $2, $1`\n    },\n    {\n      type: \"paragraph\",\n      text:\n        \"What exactly does this code do? Let’s look at it line-by-line:\"\n    },\n    {\n      type: \"paragraph\",\n      text:\n        `\"li $1, 10\" loads the constant value 10 into register 1. So at this point, register 1 has the value 10 in it`\n    },\n    {\n      type: \"paragraph\",\n      text:\n        `\"addi $2, $1, 5\" Adds 5 to the value in register 1 and stores the result in register 2. So now, Register 1 has the value 10 in it and register 2 has the value 5 + 10 = 15 in it`\n    },\n    {\n      type: \"paragraph\",\n      text:\n        `\"sub $3, $2, $1\" Subtracts the value in register 1 from the value in register 2 and places the result in register 3. So now, register 1 still has the value 10 in it, register 2 has the value 15 in it, and register 3 has 15 - 10 = 5 in it.`\n    },\n    {\n      type: \"paragraph\",\n      text:\n        `This is a very simple MIPS program. Doing anything even slightly complicated (like multiplication or division) can use a lot of lines to write.`\n    },\n    {\n      type: \"subheader2\",\n      text:\n        `Try it yourself!`\n    },\n    {\n      type: \"paragraph\",\n      text:\n        `Click different buttons to see how much Assembly (MIPS) code is needed for different tasks.`\n    },\n    {\n      type: \"interactive\",\n      languages: [\"mips\"]\n    },\n    {\n      type: \"paragraph\",\n      text: \"Even for small functionalities, you can see that there are lots of lines of complexity in the code. This makes it easier for the machine to understand, but difficult for a human programmer.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"What are the advantages of MIPS/Assembly?\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"Speed! Assembly is much faster than using a proper programming language because it’s exactly what is happening in the CPU. The code doesn’t sacrifice speed to be easier to work with, so it allows doing more complicated processing in less time.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"What are the disadvantages of MIPS/Assembly? \"\n    },\n    {\n      type: \"paragraph\",\n      text: \"It is very difficult to use. If you are making any kind of complicated program, there will be a lot of assembly code that is pretty difficult to read. Furthermore, assembly never “crashes” or stops running the program when something incorrect happens, because it is simply following a list of instructions. If you’re lucky, the program will just run a section of code over and over, but otherwise, you will have to search through potentially thousands of lines of code to try and figure out what’s going on.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"When is MIPS/Assembly used? \"\n    },\n    {\n      type: \"paragraph\",\n      text: \"Today, basically never. Any practical application will be programmed in at least C, as the C compiler has gotten so good that the speed advantage assembly provides is negligible in today’s hardware. Some notable uses of assembly are NES and SNES games, the code used in the Apollo missions (including the lunar landing), and earlier versions of MS-DOS.\"\n    },\n    {\n      type: \"next-button\",\n      title: \"Part 2 - C\",\n      link: \"/edci-335-website/code/part2\"\n    }\n  ]\n};\n","export default {\n  title: \"Part 2 - C Language\",\n  duration: \"10 Minutes\",\n  technology: \"Complete Intro and Part 1\",\n  summary: [\n    \"The first modern programming language\",\n    \"What are the characteristics of C and how are they relevent?\",\n  ],\n  page: [\n    {\n      type: \"title\",\n      text: \"Part 2 - The C Language\"\n    },\n    {\n      type: \"duration\",\n      text: \"10 Minutes\"\n    },\n    {\n      type: \"technology\",\n      text: \"What is C and how is it used?\"\n    },\n    {\n      type: \"image\",\n      address: require(\"../../assets/part2-1.png\")\n    },\n    {\n      type: \"paragraph\",\n      text: \"In the last chapter, we learned about how Assembly is a powerful programming language that provides fast and customizable code. However, it takes too long to write any meaningful software quickly. As a result, programmers created a new language that allows many of the repetitive processes in Assembly to be automated, and that is our next language of interest.\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"C is the lowest-level programming language that is still in widespread use today. C code is somewhat readable but still logical and formal enough to be turned into machine code without any ambiguity. Rather than simply loading and saving directly onto a CPU’s registers, C allows the programmer to use variables, which assign a name to a value. \"\n    },\n    {\n      type: \"paragraph\",\n      text: `The programmer can then use that variable in the code, and when they hit compile, the compiler will automatically figure out which variables will be stored on which registers at what time.\n      Let’s look at some C code:`\n    },\n    {\n      type: \"code\",\n      code: `int main() {\n        int x = 10 + 5;\n        x = x - 12;\n        const char* name = “Billy Bob”;\n        printf(“My name is %s, my favourite number is %d\\\\n”, name, x)\n}`\n    },\n    {\n      type: \"paragraph\",\n      text: \"Let’s break down what’s going on here:\"\n    },\n    {\n      type: \"paragraph\",\n      text: `\"int main() { .... }\" This tells the compiler where to start running the code from. Everything inside the curly brackets will run when the program is started`\n    },\n    {\n      type: \"paragraph\",\n      text: `\"int x = 10 + 5\" This creates a variable called x and assigns the value 10 + 5 = 15 to it`\n    },\n    {\n      type: \"paragraph\",\n      text: `\"x = x - 12\" This calculates x - 12 = 15 - 12 = 3 and stores that value in x. So x now has 3 in it`\n    },\n    {\n      type: \"paragraph\",\n      text: `\"const car* name = “Billy Bob”\" This creates a variable called “name” that has the value “Billy Bob” in it. The reason this variable has const char* instead of int is because C needs every variable to have a type. int means that the variable’s type is an integer (i.e. 5, 12, -452) and const char* means that the variable’s type is a string, which just means a bunch of characters ‘stringed’ together (i.e. “hello”, “how are you today”, “abcdefghij….”). Since “Billy Bob” is a string and not an int, we use const char*.`\n    },\n    {\n      type: \"paragraph\",\n      text: `\"printf(“My name is %s, my favourite number is %d\\n”, name, x)\" This is one of the built-in methods in C, called printf. It prints some text to the console. We pass it three different values:`\n    },\n    {\n      type: \"paragraph\",\n      text: `“My name is %s, my favourite number is %d” This is the text that we want to print. Notice how there’s %s and %d in it. Those will be replaced by the next two values`\n    },\n    {\n      type: \"paragraph\",\n      text: `\"name\" is what we want to replace %s`\n    },{\n      type: \"paragraph\",\n      text: `\"x\" is what we want to replace %d`\n    },\n    {\n      type: \"paragraph\",\n      text: \"So running that printf statement will print “Hello, my name is Billy Bob and my favourite number is 3, since name has the value Billy Bob and x has the value 3.\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"\"\n    },\n    {\n      type: \"subheader2\",\n      text:\n        `Try it yourself!`\n    },\n    {\n      type: \"paragraph\",\n      text:\n        `Click different buttons to see how much C code is needed for different tasks.`\n    },\n    {\n      type: \"interactive\",\n      languages: [\"c\"]\n    },\n    {\n      type: \"paragraph\",\n      text: \"\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"What are the advantages of C?\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"Even though it’s slower than assembly, C is still much, much faster than most other programming languages. Since C is compiled, the compiler can perform many different performance-improving tricks to make the program run significantly faster. C also generally tends to use less memory than other programming languages, since each variable has a different type (and therefore a known size) and each variable is discarded as soon as it is not needed.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"What are the disadvantages of C?\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"Compared to most languages, it is still quite difficult to work with. Since each variable has a different type, the programming has to manually keep track of what variable is storing what data type at any given time. For example, const char* x = “Hello” + “ World” is not a valid C code even though it seems obvious to us that x should store the value “Hello World”. However, the compiler doesn’t know what + means unless it is simply adding two numbers together, so the programmer will have to manually implement concatenating two strings together.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"What is C used for today?\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"C (And the closely-related C++) are both commonly used anywhere where speed is an important factor. Game Development is still commonly one through C since a faster-running program means that more complicated models and higher-resolution textures can be drawn on the screen without performance issues. C is also commonly used when programming an operating system (such as Windows or macOS) since the operating system needs to manage all the other programs on the computer, and thus can easily become the bottleneck.\"\n    },\n    {\n      type: \"next-button\",\n      title: \"Part 3 - Python\",\n      link: \"/edci-335-website/code/part3\"\n    }\n  ]\n};\n","export default {\n  title: \"Part 3 - Python\",\n  duration: \"10 Minutes\",\n  technology: \"Complete Intro, Part 1, and Part 2\",\n  summary: [\n    \"High-level language used and loved by everyone\",\n    \"When is Python a good time to use? When is it not?\",\n  ],\n  page: [\n    {\n      type: \"title\",\n      text: \"Part 3 - Python\"\n    },\n    {\n      type: \"duration\",\n      text: \"10 Minutes\"\n    },\n    {\n      type: \"technology\",\n      text: \"What does Python do and how is it so simple?\"\n    },\n    {\n      type: \"image\",\n      address: require(\"../../assets/part3-1.png\")\n    },\n    {\n      type: \"paragraph\",\n      text: \"Python is the last language we’re going to look at. It is a very high-level language that is much easier to use than C. For example, our C program example could be written in python as simply:\"\n    },\n    {\n      type: \"code\",\n      code: `x = 10 + 5\nname = “Billy Bob”\nprint(“Hello, my name is %s and my favourite number is %s” % (x, name))`\n    },\n    {\n      type: \"paragraph\",\n      text: \"No need for int main or variable types. Every variable in python can hold any data type (an int, a string, etc). This makes python much easier to work with than C, but slower since it has to type-check everything and manage the sizes of all the variables on the go.\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"However, it’s so high level that sometimes it can almost pass for English. For example, the following code is perfectly valid in python:\"\n    },\n    {\n      type: \"code\",\n      code: `if name is “John Doe”:\n  print(“Hello Anonymous”)\nelse:\n  print(“Hello ” + name”)`\n    },\n    {\n      type: \"paragraph\",\n      text: \"\"\n    },\n    {\n      type: \"subheader2\",\n      text:\n        `Try it yourself!`\n    },\n    {\n      type: \"paragraph\",\n      text:\n        `Click different buttons to see how Python accomplishes different tasks.`\n    },\n    {\n      type: \"interactive\",\n      languages: [\"python\"]\n    },\n    {\n      type: \"paragraph\",\n      text: \"As you can see, Python requires a fraction of the code required by other programming languages. This is the power of Python - it allows programmers to implement software programs quickly without being tied to the specifics of the computer.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"What are the advantages of Python?\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"Python is much, much faster to write programs than C. Like the analogy of house building kits, Python provides many pre-existing functionalities. Thus, programmers work much quicker in Python than in most other languages. Since they don’t have to manually manage all the variable types or wait for (sometimes quite long) compile times, Python (and other languages like it) are often used by developers who need to create a working product quickly. \"\n    },\n    {\n      type: \"image-caption\",\n      address: require(\"../../assets/part3-2.png\"),\n      caption: \"Python package manager (PIP) allows developers to integrate from thousands of existing code modules.\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"Python also has a package manager built into it, which means that developers can share code quickly and securely. This has led to thousands of Python libraries available for free to use in any project, meaning that it’s even easier to start working in Python as most of your work may be already done for you.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"What are the disadvantages of Python?\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"Python is quite a bit slower than C since it has to manage everything that the programmer does not. It needs to dynamically figure out what size each variable is, what type each variable is, whether two variables can be added together, as well as a lot of other things going on under the hood. Python also uses a memory management system called garbage collection, which is necessary to figure out which variables are no longer needed but slows down runtime even more.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"What is Python used for today?\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"One of Python’s main uses today is to make a web server application. Since the information is being sent over the internet, using slower, easier languages makes sense since they can be quite slow but still be negligible compared to transmitting data over the internet. Django is one of the top server application libraries, with 60.5K starts (the equivalents of likes) on GitHub. Python is also quite often used in data science since it’s easy for non-programmers or amateur programmers to work with and speed is less important since each query is often only run a couple of times to generate graphs filled with the collected data. Thus, the developer saves more time on development than they lose when running the program.\"\n    },\n    {\n      type: \"next-button\",\n      title: \"Outro\",\n      link: \"/edci-335-website/code/outro\"\n    }\n  ]\n};\n","export default {\n  title: \"Outro\",\n  duration: \"5 Minutes\",\n  technology: \"Complete Intro, Part1, Part 2, and Part 3\",\n  summary: [\n    \"Ending thoughts\",\n    \"Key takeaways\",\n  ],\n  page: [\n    {\n      type: \"title\",\n      text: \"Outro\"\n    },\n    {\n      type: \"duration\",\n      text: \"5 Minutes\"\n    },\n    {\n      type: \"technology\",\n      text: \"What are our takeaways?\"\n    },\n    {\n      type: \"image\",\n      address: require(\"../../assets/outro-1.png\"),\n    },\n    {\n      type: \"paragraph\",\n      text: \"Assembly, Python, and C are just a few of the programming languages that are used to create software programs that are ubiquitous in our lives. As evident from the blog posts, each of the languages has very different characteristics, and respective strengths and weaknesses.\"\n    },\n    {\n      type: \"subheader2\",\n      text: \"The difference in lines of code\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"Interact with the below code interactors to see the difference in the lines of code required to accomplish different tasks in different languages.\"\n    },\n    { \n      type: \"interactive\",\n      languages: [\"mips\", \"c\", \"python\"]\n    },\n    {\n      type: \"paragraph\",\n      text: \"As you can see, the amount of code required varies drastically between MIPS, C, and Python. However, we have learned that MIPS runs much faster than C, and C runs much faster than Python. \"\n    },\n    {\n      type: \"subheader2\",\n      text: \"Finishing thoughts\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"This learning resource could lead to the reader feeling that there are too many languages that they’ll need to learn. However, just like how different types of housing are still housing, different programming languages are, at the core, just a tool to express our thoughts with the computer.\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"We hope you've found this learning resource helpful and we wish you the best in your programming endeavours in the future!\"\n    },\n    {\n      type: \"paragraph\",\n      text: \"\"\n    },\n  ]\n};\n","import React from \"react\";\nimport { NavLink, Switch, Route, useLocation } from \"react-router-dom\";\n\nimport ProjectCard from \"../ProjectCard/ProjectCard\";\nimport ProjectPage from \"../ProjectPage/ProjectPage\";\n\nimport Intro from \"../Projects/Intro\";\nimport Part1 from \"../Projects/Part1\";\nimport Part2 from \"../Projects/Part2\";\nimport Part3 from \"../Projects/Part3\";\nimport Outro from \"../Projects/Outro\";\n\nimport IntroLogo from \"../../assets/intro.svg\";\nimport Part1Logo from \"../../assets/part1.svg\";\nimport Part2Logo from \"../../assets/part2.svg\";\nimport Part3Logo from \"../../assets/part3.svg\";\nimport OutroLogo from \"../../assets/outro.svg\";\n\nimport \"./Code.scss\";\n\nfunction CodeList() {\n  return (\n    <div>\n      <div className=\"title left\">programme (no pun intended)</div>\n      <NavLink className=\"link\" to=\"/edci-335-website/code/intro\">\n        <ProjectCard image={IntroLogo} {...Intro} />\n      </NavLink>\n      <NavLink className=\"link\" to=\"/edci-335-website/code/part1\">\n        <ProjectCard image={Part1Logo} {...Part1} />\n      </NavLink>\n      <NavLink className=\"link\" to=\"/edci-335-website/code/part2\">\n        <ProjectCard image={Part2Logo} {...Part2} />\n      </NavLink>\n      <NavLink className=\"link\" to=\"/edci-335-website/code/part3\">\n        <ProjectCard image={Part3Logo} {...Part3} />\n      </NavLink>\n      <NavLink className=\"link\" to=\"/edci-335-website/code/outro\">\n        <ProjectCard image={OutroLogo} {...Outro} />\n      </NavLink>\n    </div>\n  );\n}\n\nclass Code extends React.Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/edci-335-website/code\" component={CodeList} />\n          <Route\n            path=\"/edci-335-website/code/intro\"\n            render={() => <ProjectPage {...Intro} />}\n          />\n          <Route\n            path=\"/edci-335-website/code/part1\"\n            render={() => <ProjectPage {...Part1} />}\n          />\n          <Route\n            path=\"/edci-335-website/code/part2\"\n            render={() => <ProjectPage {...Part2} />}\n          />\n          <Route\n            path=\"/edci-335-website/code/part3\"\n            render={() => <ProjectPage {...Part3} />}\n          />\n          <Route\n            path=\"/edci-335-website/code/outro\"\n            render={() => <ProjectPage {...Outro} />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Code;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"../Home/Home\";\nimport Code from \"../Code/Code\";\n\nimport \"./Main.scss\";\n\nclass Main extends React.Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"Main\">\n        <Switch>\n          <Route exact path={\"/edci-335-website/\"} component={Home} />\n          <Route path=\"/edci-335-website/code\" component={Code} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport \"./Header.scss\";\nimport logo from \"../../assets/logo.png\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"Header\">\n        <NavLink to=\"/edci-335-website/\" activeClassName=\"\">\n          <img src={logo} />\n        </NavLink>\n        <div className=\"links\">\n          <NavLink to=\"/edci-335-website/code\" className=\"link\" activeClassName=\"active\">\n            programme\n          </NavLink>\n          <NavLink exact to=\"/edci-335-website\" className=\"link\" activeClassName=\"active\">\n            motivation\n          </NavLink>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nimport \"./Footer.scss\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div className=\"Footer\">\n        <div className=\"basetext2\">Made with ❤️ by Josef Waller and James Park</div>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\n\nimport Main from \"./Components/Main/Main\";\nimport Header from \"./Components/Header/Header\";\nimport Footer from \"./Components/Footer/Footer\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router\";\n\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location.pathname !== prevProps.location.pathname) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(ScrollToTop);\n","import React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport createHistory from \"history/createBrowserHistory\";\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize(\"UA-144851049-1\");\nconst history = createHistory();\nhistory.listen(() => {\n  ReactGA.pageview(window.location.pathname);\n});\nclass RouteContainer extends React.Component {\n  componentDidMount() {\n    ReactGA.pageview(window.location.pathname);\n  }\n  render() {\n    return <Router history={history}>{this.props.children}</Router>;\n  }\n}\n\nexport default RouteContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ScrollToTop from \"./Components/ScrollToTop\";\nimport RouterContainer from \"./Components/RouteContainer\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <RouterContainer>\n      <ScrollToTop>\n        <App />\n      </ScrollToTop>\n    </RouterContainer>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/background.891959ba.png\";","module.exports = __webpack_public_path__ + \"static/media/portrait.dedf01c1.png\";","module.exports = __webpack_public_path__ + \"static/media/blocker.f4bf3d95.png\";"],"sourceRoot":""}